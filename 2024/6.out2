Solution to Part 1:  41 (of 100 locations)
Starting location: (6, 4)

Visited:
[(6, 4), (5, 4), (4, 4), (3, 4), (2, 4), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (6, 7), (6, 6), (6, 5), (6, 3), (6, 2), (5, 2), (4, 2), (4, 3), (4, 5), (4, 6), (5, 6), (7, 6), (8, 6), (8, 5), (8, 4), (8, 3), (8, 2), (8, 1), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 7), (8, 7), (9, 7)]

** Checking (6, 4)  (1 of 41)
Reached edge of map

** Checking (5, 4)  (2 of 41)
Reached edge of map

** Checking (4, 4)  (3 of 41)
Reached edge of map

** Checking (3, 4)  (4 of 41)
Reached edge of map

** Checking (2, 4)  (5 of 41)
Reached edge of map

** Checking (1, 4)  (6 of 41)
Reached edge of map

** Checking (1, 5)  (7 of 41)
Reached edge of map

** Checking (1, 6)  (8 of 41)
Reached edge of map

** Checking (1, 7)  (9 of 41)
Reached edge of map

** Checking (1, 8)  (10 of 41)
Reached edge of map

** Checking (2, 8)  (11 of 41)
Reached edge of map

** Checking (3, 8)  (12 of 41)
Reached edge of map

** Checking (4, 8)  (13 of 41)
Reached edge of map

** Checking (5, 8)  (14 of 41)
Reached edge of map

** Checking (6, 8)  (15 of 41)
Reached edge of map

** Checking (6, 7)  (16 of 41)
Reached edge of map

** Checking (6, 6)  (17 of 41)
Reached edge of map

** Checking (6, 5)  (18 of 41)
Reached edge of map

** Checking (6, 3)  (19 of 41)
ooo  Looping  ooo
[5, 4, (-1, 0)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)]]

** Checking (6, 2)  (20 of 41)
Reached edge of map

** Checking (5, 2)  (21 of 41)
Reached edge of map

** Checking (4, 2)  (22 of 41)
Reached edge of map

** Checking (4, 3)  (23 of 41)
Reached edge of map

** Checking (4, 5)  (24 of 41)
Reached edge of map

** Checking (4, 6)  (25 of 41)
Reached edge of map

** Checking (5, 6)  (26 of 41)
Reached edge of map

** Checking (7, 6)  (27 of 41)
ooo  Looping  ooo
[6, 5, (0, -1)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)], [6, 3, (0, -1)], [6, 2, (0, -1)], [5, 2, (-1, 0)], [4, 2, (-1, 0)], [4, 3, (0, 1)], [4, 4, (0, 1)], [4, 5, (0, 1)], [4, 6, (0, 1)], [5, 6, (1, 0)], [6, 6, (1, 0)]]

** Checking (8, 6)  (28 of 41)
Reached edge of map

** Checking (8, 5)  (29 of 41)
Reached edge of map

** Checking (8, 4)  (30 of 41)
Reached edge of map

** Checking (8, 3)  (31 of 41)
ooo  Looping  ooo
[6, 4, (-1, 0)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)], [6, 3, (0, -1)], [6, 2, (0, -1)], [5, 2, (-1, 0)], [4, 2, (-1, 0)], [4, 3, (0, 1)], [4, 4, (0, 1)], [4, 5, (0, 1)], [4, 6, (0, 1)], [5, 6, (1, 0)], [6, 6, (1, 0)], [7, 6, (1, 0)], [8, 6, (1, 0)], [8, 5, (0, -1)], [8, 4, (0, -1)], [7, 4, (-1, 0)]]

** Checking (8, 2)  (32 of 41)
Reached edge of map

** Checking (8, 1)  (33 of 41)
ooo  Looping  ooo
[5, 2, (-1, 0)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)], [6, 3, (0, -1)], [6, 2, (0, -1)], [5, 2, (-1, 0)], [4, 2, (-1, 0)], [4, 3, (0, 1)], [4, 4, (0, 1)], [4, 5, (0, 1)], [4, 6, (0, 1)], [5, 6, (1, 0)], [6, 6, (1, 0)], [7, 6, (1, 0)], [8, 6, (1, 0)], [8, 5, (0, -1)], [8, 4, (0, -1)], [8, 3, (0, -1)], [8, 2, (0, -1)], [7, 2, (-1, 0)], [6, 2, (-1, 0)]]

** Checking (7, 1)  (34 of 41)
Reached edge of map

** Checking (7, 2)  (35 of 41)
Reached edge of map

** Checking (7, 3)  (36 of 41)
Reached edge of map

** Checking (7, 4)  (37 of 41)
Reached edge of map

** Checking (7, 5)  (38 of 41)
Reached edge of map

** Checking (7, 7)  (39 of 41)
ooo  Looping  ooo
[8, 6, (1, 0)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)], [6, 3, (0, -1)], [6, 2, (0, -1)], [5, 2, (-1, 0)], [4, 2, (-1, 0)], [4, 3, (0, 1)], [4, 4, (0, 1)], [4, 5, (0, 1)], [4, 6, (0, 1)], [5, 6, (1, 0)], [6, 6, (1, 0)], [7, 6, (1, 0)], [8, 6, (1, 0)], [8, 5, (0, -1)], [8, 4, (0, -1)], [8, 3, (0, -1)], [8, 2, (0, -1)], [8, 1, (0, -1)], [7, 1, (-1, 0)], [7, 2, (0, 1)], [7, 3, (0, 1)], [7, 4, (0, 1)], [7, 5, (0, 1)], [7, 6, (0, 1)]]

** Checking (8, 7)  (40 of 41)
Reached edge of map

** Checking (9, 7)  (41 of 41)
ooo  Looping  ooo
[8, 5, (0, -1)]
[[6, 4, (-1, 0)], [5, 4, (-1, 0)], [4, 4, (-1, 0)], [3, 4, (-1, 0)], [2, 4, (-1, 0)], [1, 4, (-1, 0)], [1, 5, (0, 1)], [1, 6, (0, 1)], [1, 7, (0, 1)], [1, 8, (0, 1)], [2, 8, (1, 0)], [3, 8, (1, 0)], [4, 8, (1, 0)], [5, 8, (1, 0)], [6, 8, (1, 0)], [6, 7, (0, -1)], [6, 6, (0, -1)], [6, 5, (0, -1)], [6, 4, (0, -1)], [6, 3, (0, -1)], [6, 2, (0, -1)], [5, 2, (-1, 0)], [4, 2, (-1, 0)], [4, 3, (0, 1)], [4, 4, (0, 1)], [4, 5, (0, 1)], [4, 6, (0, 1)], [5, 6, (1, 0)], [6, 6, (1, 0)], [7, 6, (1, 0)], [8, 6, (1, 0)], [8, 5, (0, -1)], [8, 4, (0, -1)], [8, 3, (0, -1)], [8, 2, (0, -1)], [8, 1, (0, -1)], [7, 1, (-1, 0)], [7, 2, (0, 1)], [7, 3, (0, 1)], [7, 4, (0, 1)], [7, 5, (0, 1)], [7, 6, (0, 1)], [7, 7, (0, 1)], [8, 7, (1, 0)], [8, 6, (0, -1)]]
Obstacle locations causing looping:
[(6, 3), (7, 6), (8, 3), (8, 1), (7, 7), (9, 7)]
Solution to Part 2:  6
